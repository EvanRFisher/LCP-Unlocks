{"version":3,"sources":["logo.svg","icons/key.svg","icons/crafting.svg","App.js","reportWebVitals.js","index.js"],"names":["SelectModeButton","className","onClick","this","props","src","iconInfo","icon","iconClass","label","React","Component","App","state","mode","newState","keyIcon","setGlobalMode","mergeIcon","logo","alt","href","target","rel","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0OAAe,MAA0B,iCCA1B,MAA0B,gCCA1B,MAA0B,qC,eCWnCA,E,4JACJ,WACE,OAAQ,sBAAKC,UAAU,mBAAmBC,QAASC,KAAKC,MAAMF,QAAtD,UACN,qBAAKG,IAAKF,KAAKC,MAAME,SAASC,KAAMN,UAAWE,KAAKC,MAAME,SAASE,YACnE,4BAAIL,KAAKC,MAAMK,e,GAJUC,IAAMC,WAuDtBC,E,kDA7Cb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IACDS,MAAM,CAACC,KAAK,aAFD,E,iDAKlB,SAAcC,GACZZ,KAAKU,MAAMC,KAAOC,I,oBAIpB,WAAS,IAAD,OACN,OAAQZ,KAAKU,MAAMC,MACjB,IAAK,YACL,IAAK,aACL,IAAK,YACL,QACE,OAAQ,sBAAKb,UAAU,MAAf,UACN,sBAAKA,UAAU,cAAf,UACE,cAAC,EAAD,CAAkBK,SAAU,CAACC,KAAKS,EAAWR,UAAU,YAAaC,MAAM,iBAAiBP,QAAS,kBAAM,EAAKe,cAAc,gBAC7H,cAAC,EAAD,CAAkBX,SAAU,CAACC,KAAKW,EAAWV,UAAU,cAAeC,MAAM,YAAYP,QAAS,kBAAM,EAAKe,cAAc,oBAE5H,4BAAId,KAAKU,MAAMC,UAGrB,OACE,qBAAKb,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,qBAAKI,IAAKc,EAAMlB,UAAU,WAAWmB,IAAI,SACzC,sCACO,8CADP,0BAGA,mBACEnB,UAAU,WACVoB,KAAK,sBACLC,OAAO,SACPC,IAAI,sBAJN,kC,GAhCQb,IAAMC,WCRTa,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.e209b205.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export default __webpack_public_path__ + \"static/media/key.2f16108f.svg\";","export default __webpack_public_path__ + \"static/media/crafting.ee80224b.svg\";","import logo from './logo.svg';\nimport keyIcon from './icons/key.svg';\nimport mergeIcon from './icons/crafting.svg';\nimport React  from 'react';\nimport './App.css';\n\n/*\n2 Modes:\n1.\n*/\n\nclass SelectModeButton extends React.Component {\n  render(){\n    return (<div className=\"selectable-inset\" onClick={this.props.onClick}>\n      <img src={this.props.iconInfo.icon} className={this.props.iconInfo.iconClass}/>\n      <p>{this.props.label}</p>\n    </div>);\n  }\n}\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={mode:\"selecting\"};\n  }\n\n  setGlobalMode(newState){\n    this.state.mode = newState;\n  }\n\n\n  render(){\n    switch (this.state.mode) {\n      case \"unlocking\":\n      case \"augmenting\":\n      case \"selecting\":\n      default:\n        return (<div className=\"App\">\n          <div className=\"ModeButtons\">\n            <SelectModeButton iconInfo={{icon:keyIcon,   iconClass:\"key-logo\"}} label=\"Unlock Content\" onClick={() => this.setGlobalMode(\"unlocking\")}/>\n            <SelectModeButton iconInfo={{icon:mergeIcon, iconClass:\"craft-logo\"}} label=\"Patch LCP\" onClick={() => this.setGlobalMode(\"augmenting\")}/>\n          </div>\n          <p>{this.state.mode}</p>\n        </div>);\n    }\n    return (\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n          <p>\n            Edit <code>src/App.js</code> and save to reload.\n          </p>\n          <a\n            className=\"App-link\"\n            href=\"https://reactjs.org\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            Learn React\n          </a>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}